name: dockercompose7563040157711713634
services:
  buyrequest_api:
    build:
      context: C:\Users\rcostame\source\repos\FinancialAPP
      dockerfile: BuyRequest_Api/Dockerfile
    depends_on:
      sqldatav2:
        condition: service_started
    image: buyrequestapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      published: "8085"
      protocol: tcp
  cashbook_api:
    build:
      context: C:\Users\rcostame\source\repos\FinancialAPP
      dockerfile: CashBook_Api/Dockerfile
    depends_on:
      sqldatav2:
        condition: service_started
    image: cashbookapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      published: "8088"
      protocol: tcp
  document_api:
    build:
      context: C:\Users\rcostame\source\repos\FinancialAPP
      dockerfile: Document_Api/Dockerfile
    depends_on:
      sqldatav2:
        condition: service_started
    image: documentapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      published: "8086"
      protocol: tcp
  productapi:
    build:
      context: C:\Users\rcostame\source\repos\FinancialAPP
      dockerfile: ProductAPI/Dockerfile
    depends_on:
      sqldatav2:
        condition: service_started
    image: productapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      published: "8087"
      protocol: tcp
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\rcostame\.docker-conf\rabbitmq\data
      target: /var/lib/rabbitmq
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\rcostame\.docker-conf\rabbitmq\log
      target: /var/log/rabbitmq
      bind:
        create_host_path: true
  sqldatav2:
    container_name: sqldatav2
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Numsey#2022
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Dados\volumes\mssql
      target: /var/opt/mssql/data
      bind:
        create_host_path: true
networks:
  backend:
    name: dockercompose7563040157711713634_backend